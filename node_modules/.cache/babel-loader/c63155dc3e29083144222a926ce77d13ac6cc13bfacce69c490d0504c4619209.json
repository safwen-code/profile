{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nodes\\\\Desktop\\\\reactui\\\\profile\\\\src\\\\components\\\\content\\\\Carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport './embda.css';\nimport imageByIndex from './imageByIndex';\nimport { flushSync } from 'react-dom';\nimport './base.css';\nimport Autoplay from 'embla-carousel-autoplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWEEN_FACTOR = 1.2;\nconst OPTIONS = {\n  dragFree: true,\n  loop: true\n};\nconst SLIDE_COUNT = 13;\nconst SLIDES = Array.from(Array(SLIDE_COUNT).keys());\nconst Carousel = () => {\n  _s();\n  //const [emblaRef] = useEmblaCarousel({ loop: true }, [Autoplay()])\n  const [emblaRef, emblaApi] = useEmblaCarousel(OPTIONS, [Autoplay()]);\n  const [tweenValues, setTweenValues] = useState([]);\n  const onScroll = useCallback(() => {\n    if (!emblaApi) return;\n    const engine = emblaApi.internalEngine();\n    const scrollProgress = emblaApi.scrollProgress();\n    const styles = emblaApi.scrollSnapList().map((scrollSnap, index) => {\n      let diffToTarget = scrollSnap - scrollProgress;\n      if (engine.options.loop) {\n        engine.slideLooper.loopPoints.forEach(loopItem => {\n          const target = loopItem.target();\n          if (index === loopItem.index && target !== 0) {\n            const sign = Math.sign(target);\n            if (sign === -1) diffToTarget = scrollSnap - (1 + scrollProgress);\n            if (sign === 1) diffToTarget = scrollSnap + (1 - scrollProgress);\n          }\n        });\n      }\n      return diffToTarget * (-1 / TWEEN_FACTOR) * 100;\n    });\n    setTweenValues(styles);\n  }, [emblaApi, setTweenValues]);\n  useEffect(() => {\n    if (!emblaApi) return;\n    onScroll();\n    emblaApi.on('scroll', () => {\n      flushSync(() => onScroll());\n    });\n    emblaApi.on('reInit', onScroll);\n  }, [emblaApi, onScroll]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"embla\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"embla__viewport\",\n      ref: emblaRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"embla__container\",\n        children: SLIDES.map(index => /*#__PURE__*/_jsxDEV(Card, {\n          className: \"embla__slide\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"embla__slide__number\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"embla__parallax\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"embla__parallax__layer\",\n              style: {\n                ...(tweenValues.length && {\n                  transform: `translateX(${tweenValues[index]}%)`\n                })\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"embla__slide__img embla__parallax__img\",\n                src: imageByIndex(index),\n                alt: \"Your alt text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"7PZ/yfLx76i/Ac+nzUqf4a0Hp+k=\", false, function () {\n  return [useEmblaCarousel];\n});\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useEmblaCarousel","imageByIndex","flushSync","Autoplay","jsxDEV","_jsxDEV","TWEEN_FACTOR","OPTIONS","dragFree","loop","SLIDE_COUNT","SLIDES","Array","from","keys","Carousel","_s","emblaRef","emblaApi","tweenValues","setTweenValues","onScroll","engine","internalEngine","scrollProgress","styles","scrollSnapList","map","scrollSnap","index","diffToTarget","options","slideLooper","loopPoints","forEach","loopItem","target","sign","Math","on","className","children","ref","Card","fileName","_jsxFileName","lineNumber","columnNumber","style","length","transform","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/nodes/Desktop/reactui/profile/src/components/content/Carousel.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\nimport useEmblaCarousel from 'embla-carousel-react'\r\nimport './embda.css'\r\nimport imageByIndex from './imageByIndex'\r\nimport { flushSync } from 'react-dom'\r\nimport './base.css'\r\n\r\nimport Autoplay from 'embla-carousel-autoplay'\r\n\r\nconst TWEEN_FACTOR = 1.2\r\nconst OPTIONS = { dragFree: true, loop: true }\r\nconst SLIDE_COUNT = 13\r\nconst SLIDES = Array.from(Array(SLIDE_COUNT).keys())\r\nconst Carousel = () => {\r\n  //const [emblaRef] = useEmblaCarousel({ loop: true }, [Autoplay()])\r\n  const [emblaRef, emblaApi] = useEmblaCarousel(OPTIONS, [Autoplay()])\r\n  const [tweenValues, setTweenValues] = useState([])\r\n  const onScroll = useCallback(() => {\r\n    if (!emblaApi) return\r\n\r\n    const engine = emblaApi.internalEngine()\r\n    const scrollProgress = emblaApi.scrollProgress()\r\n\r\n    const styles = emblaApi.scrollSnapList().map((scrollSnap, index) => {\r\n      let diffToTarget = scrollSnap - scrollProgress\r\n\r\n      if (engine.options.loop) {\r\n        engine.slideLooper.loopPoints.forEach((loopItem) => {\r\n          const target = loopItem.target()\r\n          if (index === loopItem.index && target !== 0) {\r\n            const sign = Math.sign(target)\r\n            if (sign === -1) diffToTarget = scrollSnap - (1 + scrollProgress)\r\n            if (sign === 1) diffToTarget = scrollSnap + (1 - scrollProgress)\r\n          }\r\n        })\r\n      }\r\n      return diffToTarget * (-1 / TWEEN_FACTOR) * 100\r\n    })\r\n    setTweenValues(styles)\r\n  }, [emblaApi, setTweenValues])\r\n  useEffect(() => {\r\n    if (!emblaApi) return\r\n    onScroll()\r\n    emblaApi.on('scroll', () => {\r\n      flushSync(() => onScroll())\r\n    })\r\n    emblaApi.on('reInit', onScroll)\r\n  }, [emblaApi, onScroll])\r\n\r\n  return (\r\n    <div className=\"embla\">\r\n      <div className=\"embla__viewport\" ref={emblaRef}>\r\n        <div className=\"embla__container\">\r\n          {SLIDES.map((index) => (\r\n            <Card className=\"embla__slide\" key={index}>\r\n              <div className=\"embla__slide__number\">\r\n                <span>{index + 1}</span>\r\n              </div>\r\n              <div className=\"embla__parallax\">\r\n                <div\r\n                  className=\"embla__parallax__layer\"\r\n                  style={{\r\n                    ...(tweenValues.length && {\r\n                      transform: `translateX(${tweenValues[index]}%)`,\r\n                    }),\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"embla__slide__img embla__parallax__img\"\r\n                    src={imageByIndex(index)}\r\n                    alt=\"Your alt text\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Carousel\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,gBAAgB,MAAM,sBAAsB;AACnD,OAAO,aAAa;AACpB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,SAAS,QAAQ,WAAW;AACrC,OAAO,YAAY;AAEnB,OAAOC,QAAQ,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAG,GAAG;AACxB,MAAMC,OAAO,GAAG;EAAEC,QAAQ,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAK,CAAC;AAC9C,MAAMC,WAAW,GAAG,EAAE;AACtB,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAACD,KAAK,CAACF,WAAW,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;AACpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGlB,gBAAgB,CAACO,OAAO,EAAE,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMsB,QAAQ,GAAGxB,WAAW,CAAC,MAAM;IACjC,IAAI,CAACqB,QAAQ,EAAE;IAEf,MAAMI,MAAM,GAAGJ,QAAQ,CAACK,cAAc,CAAC,CAAC;IACxC,MAAMC,cAAc,GAAGN,QAAQ,CAACM,cAAc,CAAC,CAAC;IAEhD,MAAMC,MAAM,GAAGP,QAAQ,CAACQ,cAAc,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;MAClE,IAAIC,YAAY,GAAGF,UAAU,GAAGJ,cAAc;MAE9C,IAAIF,MAAM,CAACS,OAAO,CAACtB,IAAI,EAAE;QACvBa,MAAM,CAACU,WAAW,CAACC,UAAU,CAACC,OAAO,CAAEC,QAAQ,IAAK;UAClD,MAAMC,MAAM,GAAGD,QAAQ,CAACC,MAAM,CAAC,CAAC;UAChC,IAAIP,KAAK,KAAKM,QAAQ,CAACN,KAAK,IAAIO,MAAM,KAAK,CAAC,EAAE;YAC5C,MAAMC,IAAI,GAAGC,IAAI,CAACD,IAAI,CAACD,MAAM,CAAC;YAC9B,IAAIC,IAAI,KAAK,CAAC,CAAC,EAAEP,YAAY,GAAGF,UAAU,IAAI,CAAC,GAAGJ,cAAc,CAAC;YACjE,IAAIa,IAAI,KAAK,CAAC,EAAEP,YAAY,GAAGF,UAAU,IAAI,CAAC,GAAGJ,cAAc,CAAC;UAClE;QACF,CAAC,CAAC;MACJ;MACA,OAAOM,YAAY,IAAI,CAAC,CAAC,GAAGxB,YAAY,CAAC,GAAG,GAAG;IACjD,CAAC,CAAC;IACFc,cAAc,CAACK,MAAM,CAAC;EACxB,CAAC,EAAE,CAACP,QAAQ,EAAEE,cAAc,CAAC,CAAC;EAC9BtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACoB,QAAQ,EAAE;IACfG,QAAQ,CAAC,CAAC;IACVH,QAAQ,CAACqB,EAAE,CAAC,QAAQ,EAAE,MAAM;MAC1BrC,SAAS,CAAC,MAAMmB,QAAQ,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC;IACFH,QAAQ,CAACqB,EAAE,CAAC,QAAQ,EAAElB,QAAQ,CAAC;EACjC,CAAC,EAAE,CAACH,QAAQ,EAAEG,QAAQ,CAAC,CAAC;EAExB,oBACEhB,OAAA;IAAKmC,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBpC,OAAA;MAAKmC,SAAS,EAAC,iBAAiB;MAACE,GAAG,EAAEzB,QAAS;MAAAwB,QAAA,eAC7CpC,OAAA;QAAKmC,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAC9B9B,MAAM,CAACgB,GAAG,CAAEE,KAAK,iBAChBxB,OAAA,CAACsC,IAAI;UAACH,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC5BpC,OAAA;YAAKmC,SAAS,EAAC,sBAAsB;YAAAC,QAAA,eACnCpC,OAAA;cAAAoC,QAAA,EAAOZ,KAAK,GAAG;YAAC;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACN1C,OAAA;YAAKmC,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BpC,OAAA;cACEmC,SAAS,EAAC,wBAAwB;cAClCQ,KAAK,EAAE;gBACL,IAAI7B,WAAW,CAAC8B,MAAM,IAAI;kBACxBC,SAAS,EAAG,cAAa/B,WAAW,CAACU,KAAK,CAAE;gBAC9C,CAAC;cACH,CAAE;cAAAY,QAAA,eAEFpC,OAAA;gBACEmC,SAAS,EAAC,wCAAwC;gBAClDW,GAAG,EAAElD,YAAY,CAAC4B,KAAK,CAAE;gBACzBuB,GAAG,EAAC;cAAe;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAnB4BlB,KAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBnC,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA/B,EAAA,CAnEKD,QAAQ;EAAA,QAEiBf,gBAAgB;AAAA;AAAAqD,EAAA,GAFzCtC,QAAQ;AAqEd,eAAeA,QAAQ;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}